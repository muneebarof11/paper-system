{"version":3,"sources":["webpack:///./resources/js/v1/Questions/components/math/listing/PMathGeneralQuestion.jsx"],"names":["PMathGeneralQuestion","props","state","q","id","en","statement","rtl","number","prepareQuestionData","bind","updateSelectedQuestions","this","key","type","only_display","selected_question","length","question_info","find","sq","questions_count","questions","allowed","total_allowed","checked","alert","formData","title","each_question_marks","ignore","question","form_type","setState","display_rtl","hide_eng","medium","className","onClick","math","html","__html","translations","t","locale","question_statement","correct_answer","Component","connect","dispatch"],"mappings":"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","file":"14.js","sourcesContent":["import React, { Component } from 'react';\nimport MathJax from 'react-mathjax-preview'\nimport {connect} from \"react-redux\";\nimport {removeQuestion, updateSelectedQuestions} from \"../../../redux/Actions\";\n\nclass PMathGeneralQuestion extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            q: {\n                id: 0,\n                en: {\n                    statement: '',\n                },\n                rtl: {\n                    statement: '',\n                }\n            },\n            number: 0\n        };\n\n        this.prepareQuestionData = this.prepareQuestionData.bind(this);\n        this.updateSelectedQuestions = this.updateSelectedQuestions.bind(this);\n    }\n\n    componentDidMount() {\n        this.prepareQuestionData();\n    }\n\n    updateSelectedQuestions() {\n        const key =  this.props.type;\n\n        if(this.props.only_display) {\n            return false;\n        }\n\n        if(this.props.selected_question.length > 0) {\n            const question_info = this.props.selected_question.find(sq => sq.key == key);\n            const questions_count = question_info.questions ? question_info.questions.length : 0;\n            const allowed = this.props.total_allowed;\n            if(questions_count >= allowed && !this.state.q.checked) {\n                alert(`You can select maximum ${allowed} questions`);\n                return false;\n            }\n        }\n\n        const formData = {\n            key: key,\n            title: this.props.title,\n            each_question_marks: this.props.each_question_marks,\n            total_allowed: this.props.total_allowed,\n            ignore: this.props.ignore,\n            question: this.props.question,\n            form_type: this.props.form_type\n        };\n\n        this.props.updateSelectedQuestions(formData);\n\n        let checked = !this.state.q.checked;\n        let q = {\n            ...this.state.q,\n            checked: checked\n        };\n        this.setState({q})\n    }\n\n    render() {\n        const q = this.state.q;\n        const number = this.state.number;\n        const display_rtl = q.rtl.statement.length > 0;\n        const hide_eng = this.props.medium === 'urdu';\n\n        return (\n            <div className={`mt-2 mb-2 col-sm-12 px-0 py-2 ${q.checked ? 'selected_question' : ''} question_row`} onClick={this.updateSelectedQuestions}>\n                <div className={`${!display_rtl ? 'col-lg-11': 'col-lg-6'} ${hide_eng ? 'd-none' : ''}`}>\n                    <h5 className={`mb-2`}>\n                        {number}) <MathJax math={q.en.statement} />\n                    </h5>\n                </div>\n                <div className={`urdu-font text-right ${hide_eng ? 'col-lg-11' : 'col-lg-6'} ${!display_rtl ? 'd-none' : ''}`}>\n                    <h5 className=\"mb-2 text-right\">\n                        {number}) <MathJax math={q.rtl.statement} />\n                    </h5>\n                </div>\n            </div>\n        )\n    }\n\n    createMarkup(html) {\n        return {__html: `${html}`};\n    }\n\n    prepareQuestionData() {\n        let question = this.props.question;\n        let number = this.props.number;\n        if(question.length <= 0) return false;\n        if(typeof question.translations === typeof undefined) return false;\n\n        let q = this.state.q;\n\n        let i = 0, j = 1;\n        let t = question.translations.find(q => q.locale === 'en');\n\n        q.id = question.id;\n        if(t) {\n            q.en.statement = t.question_statement;\n            q.en.correct_answer = t.correct_answer;\n        }\n        /**\n         * loop through other language statement only if it exists\n         * English, Urdu & Isl (or some other) will not have this index\n         */\n        t = question.translations.find(q => q.locale === 'ur');\n        if (t) {\n            q.rtl.statement = t.question_statement;\n            q.rtl.correct_answer = t.correct_answer;\n        }\n\n        this.setState({q: q, number: number})\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selected_question: state.questions.selected_question\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateSelectedQuestions: (formData) => dispatch(updateSelectedQuestions(dispatch, formData))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PMathGeneralQuestion);\n"],"sourceRoot":""}