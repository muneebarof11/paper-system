{"version":3,"sources":["webpack:///./resources/js/v1/Questions/components/math/forms/QuestionWithImage.jsx"],"names":["QuestionWithImage","props","state","image","submitForm","bind","hideTopicForm","updateFile","showImage","e","preventDefault","file","this","name","alert","form_data","require","serialize","document","querySelector","index","hash","question_en","question_rtl","formData","FormData","key","append","addQuestion","endpoint","type","warning","window","confirm","hideForm","id","src","getElementById","target","files","setState","fr","FileReader","onload","result","readAsDataURL","onSubmit","className","encType","value","form","htmlFor","rows","onChange","disabled","is_loading","onClick","Component","connect","loading","questions","message","dispatch","hideQuestionForm"],"mappings":"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","file":"46.js","sourcesContent":["import React, { Component } from 'react';\nimport {addQuestion, hideQuestionForm} from \"../../../redux/Actions\";\nimport {connect} from \"react-redux\";\n\nclass QuestionWithImage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            image: {}\n        };\n\n        this.submitForm = this.submitForm.bind(this);\n        this.hideTopicForm = this.hideTopicForm.bind(this);\n        this.updateFile = this.updateFile.bind(this);\n        this.showImage = this.showImage.bind(this);\n    }\n\n    submitForm(e) {\n        e.preventDefault();\n\n        let file = this.state.image;\n        if(!file.name) {\n            alert('Please select an image');\n            return false;\n        }\n\n        const serialize = require('form-serialize');\n        let form = document.querySelector(`#sectionForm_${this.props.index}`);\n        let form_data = serialize(form, { hash: true });\n\n        if(!form_data.question_en && !form_data.question_rtl) {\n            alert('Either English or Urdu question statement is required');\n            return false;\n        }\n\n        const formData = new FormData();\n        for (let key in form_data) {\n            formData.append(key, form_data[key]);\n        }\n        formData.append(\"file\", file, file.name);\n\n        this.props.addQuestion(formData, this.props.endpoint, this.props.type, this.props.index);\n    }\n\n    hideTopicForm(warning) {\n        const confirmation = window.confirm('Are you sure you want to cancel?');\n        if (!confirmation) return false;\n\n        this.props.hideForm(this.props.index);\n    }\n\n    updateFile(e) {\n        let id = `question_image_${this.props.index}`;\n        const src = document.getElementById(id);\n        const target = document.getElementById(\"question_image_preview\");\n        this.showImage(src, target);\n\n        let file = e.target.files[0];\n        this.setState({image: file});\n    }\n\n    showImage(src, target) {\n        let fr = new FileReader();\n        // when image is loaded, set the src of the image where you want to display it\n        fr.onload = function(e) { target.src = this.result; };\n        fr.readAsDataURL(src.files[0]);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitForm} className=\"mb-4 sectionForm\" id={`sectionForm_${this.props.index}`} encType=\"multipart/form-data\">\n                <input type=\"hidden\" value={this.props.form} name=\"section_info\" />\n                <div className=\"row\">\n                    <div className=\"form-group col-md-6 row\">\n                        <label className=\"col-lg-3 col-form-label\" htmlFor=\"priority\">Priority</label>\n                        <select className=\"custom-select col-lg-9\" name=\"priority\" id=\"priority\">\n                            <option value=\"exercise\">Exercise</option>\n                            <option value=\"past_paper\">Past Paper</option>\n                            <option value=\"additional\">Additional</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-lg-6 row\">\n                        <label className=\"col-form-label col-lg-2\" htmlFor={`question_en_${this.props.index}`}>Question:</label>\n                        <div className=\"col-lg-10\">\n                            <textarea className=\"form-control\" name=\"question_en\" id={`question_en_${this.props.index}`} rows=\"3\"></textarea>\n                        </div>\n                    </div>\n                    <div className=\"form-group col-lg-6 row urdu-font\">\n                        <div className=\"col-lg-10\">\n                            <textarea className=\"form-control text-align-right\" name=\"question_rtl\" id={`question_rtl_${this.props.index}`} rows=\"3\"></textarea>\n                        </div>\n                        <label className=\"col-lg-2 col-form-label text-align-right\" htmlFor={`question_rtl_${this.props.index}`}>:سوال</label>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-lg-6 row\">\n                        <label className=\"col-lg-3 col-form-label\">Choose Image</label>\n                        <div className=\"custom-file col-lg-8\">\n                            <input type=\"file\" className=\"custom-file-input\" id={`question_image_${this.props.index}`} name=\"question_image\" onChange={this.updateFile} />\n                            <label className=\"custom-file-label\" htmlFor={`question_image_${this.props.index}`}>Choose file</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group col-lg-6 row urdu-font\">\n                        <img id=\"question_image_preview\" className=\"img-thumbnail mx-auto row-cols-8\" />\n                    </div>\n                </div>\n\n                <p className=\"mt-3\"></p>\n\n                <div className=\"form-group row\">\n\n                    <div className=\"mx-auto col-lg-6 row\">\n                        <button className=\"btn btn-primary col-lg-5\" type=\"submit\" disabled={this.state.is_loading}>\n                            {this.state.is_loading ? 'Saving...' : 'Save'}\n                        </button>\n                        <button className=\"btn btn-danger col-lg-5\" type=\"button\" onClick={this.hideTopicForm}>\n                            Cancel\n                        </button>\n                    </div>\n\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.questions.loading,\n        message: state.questions.message,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addQuestion: (formData, endpoint, type, index) => dispatch(addQuestion(dispatch, formData, endpoint, type, index)),\n        hideForm: (index) => dispatch(hideQuestionForm(dispatch, index))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionWithImage);\n"],"sourceRoot":""}