(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[17],{

/***/ "./resources/js/v1/Questions/components/urdu/listing/PRTLGeneralQuestion.jsx":
/*!***********************************************************************************!*\
  !*** ./resources/js/v1/Questions/components/urdu/listing/PRTLGeneralQuestion.jsx ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var _redux_Actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../redux/Actions */ \"./resources/js/v1/Questions/redux/Actions.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar PRTLGeneralQuestion = /*#__PURE__*/function (_Component) {\n  _inherits(PRTLGeneralQuestion, _Component);\n\n  var _super = _createSuper(PRTLGeneralQuestion);\n\n  function PRTLGeneralQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, PRTLGeneralQuestion);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      q: {\n        id: 0,\n        en: {\n          statement: \"\"\n        },\n        rtl: {\n          statement: \"\"\n        }\n      },\n      number: 0\n    };\n    _this.prepareQuestionData = _this.prepareQuestionData.bind(_assertThisInitialized(_this));\n    _this.updateSelectedQuestions = _this.updateSelectedQuestions.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PRTLGeneralQuestion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.prepareQuestionData();\n    }\n  }, {\n    key: \"updateSelectedQuestions\",\n    value: function updateSelectedQuestions(event) {\n      var key = this.props.type;\n      var formData = {\n        key: key,\n        title: this.props.title,\n        each_question_marks: this.props.each_question_marks,\n        total_allowed: this.props.total_allowed,\n        ignore: this.props.ignore,\n        question: this.props.question,\n        form_type: this.props.form_type\n      };\n      var checked = !this.state.q.checked;\n\n      var q = _objectSpread(_objectSpread({}, this.state.q), {}, {\n        checked: checked\n      });\n\n      if (this.props.only_display) {\n        return false;\n      }\n\n      var hasSelectedAlready = $(event.target).closest(\".selected_question\");\n\n      if (hasSelectedAlready.length > 0) {\n        console.log(\"found\", hasSelectedAlready.length);\n        hasSelectedAlready.removeClass(\"selected_question\");\n        this.props.updateSelectedQuestions(formData);\n        this.setState({\n          q: q\n        });\n        return false;\n      }\n\n      if (this.props.each_question_marks == 0 || this.props.total_allowed == 0) {\n        return false;\n      }\n\n      if (this.props.selected_question.length > 0) {\n        var question_info = this.props.selected_question.find(function (sq) {\n          return sq.key == key;\n        });\n        var questions_count = question_info.questions ? question_info.questions.length : 0;\n        var allowed = this.props.total_allowed;\n\n        if (questions_count >= allowed && !this.state.q.checked) {\n          alert(\"You can select maximum \".concat(allowed, \" questions\"));\n          return false;\n        }\n      }\n\n      this.props.updateSelectedQuestions(formData);\n      this.setState({\n        q: q\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var q = this.state.q;\n      var number = this.state.number;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: \"q-\".concat(q.id),\n        key: q.id,\n        className: \"mt-2 \".concat(!this.validateBlankLineValue() ? \"mb-2\" : \"\", \" col-sm-12 px-0 py-2 \").concat(q.checked ? \"selected_question\" : \"\", \" question_row general-question\"),\n        onClick: this.updateSelectedQuestions\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"urdu-font text-right col-sm-12\"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h5\", {\n        className: \"mb-2 text-right\",\n        style: {\n          fontSize: this.props.questionFontSize\n        }\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        style: {\n          display: \"inline-block\"\n        }\n      }, number, \")\"), \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        dangerouslySetInnerHTML: this.createMarkup(q.rtl.statement)\n      })))), this.props.blank_lines ? this.renderBlankLines() : \"\");\n    }\n  }, {\n    key: \"createMarkup\",\n    value: function createMarkup(html) {\n      return {\n        __html: \"\".concat(html)\n      };\n    }\n  }, {\n    key: \"validateBlankLineValue\",\n    value: function validateBlankLineValue() {\n      if (this.props.blank_lines === null || this.props.blank_lines === \"\" || this.props.blank_lines === 0 || this.props.blank_lines === \"0\") {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"renderBlankLines\",\n    value: function renderBlankLines() {\n      if (this.props.type != \"general\") return [];\n      var p = [];\n      if (!this.validateBlankLineValue()) return false;\n\n      for (var i = 1; i <= this.props.blank_lines; i++) {\n        p.push( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", {\n          className: \"blank_line\"\n        }, \"\\xA0\"));\n      }\n\n      return p;\n    }\n  }, {\n    key: \"prepareQuestionData\",\n    value: function prepareQuestionData() {\n      var question = this.props.question;\n      var number = this.props.number;\n      if (question.length <= 0) return false;\n      if (_typeof(question.translations) === ( true ? \"undefined\" : undefined)) return false;\n      var q = this.state.q;\n      var i = 0,\n          j = 1;\n      var t = question.translations.find(function (qt) {\n        return qt.locale === \"en\";\n      });\n      q.id = question.id;\n\n      if (t) {\n        q.en.statement = t.question_statement;\n        q.en.correct_answer = t.correct_answer;\n      }\n      /**\n       * loop through other language statement only if it exists\n       * English, Urdu & Isl (or some other) will not have this index\n       */\n\n\n      t = question.translations.find(function (qt) {\n        return qt.locale === \"ur\";\n      });\n\n      if (_typeof(t) !== ( true ? \"undefined\" : undefined)) {\n        q.rtl.statement = t.question_statement;\n        q.rtl.correct_answer = t.correct_answer;\n      }\n\n      this.setState({\n        q: q,\n        number: number\n      });\n    }\n  }]);\n\n  return PRTLGeneralQuestion;\n}(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selected_question: state.questions.selected_question\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateSelectedQuestions: function updateSelectedQuestions(formData) {\n      return dispatch(Object(_redux_Actions__WEBPACK_IMPORTED_MODULE_2__[\"updateSelectedQuestions\"])(dispatch, formData));\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(mapStateToProps, mapDispatchToProps)(PRTLGeneralQuestion));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/v1/Questions/components/urdu/listing/PRTLGeneralQuestion.jsx\n");

/***/ })

}]);