{"version":3,"sources":["webpack:///./resources/js/v1/sections/redux/Actions.js","webpack:///./resources/js/v1/sections/components/PSections.jsx","webpack:///./resources/js/v1/common/BoxSmall.jsx"],"names":["requestInit","type","REQUEST_INIT","message","response_obj","action_type","response","payload","data","fetchResponse","FETCH_DATA_SECTIONS_RESPONSE","fetchSubjectResponse","FETCH_SUBJECT_RESPONSE","addSectionResponse","ADD_SECTION_RESPONSE","removeSectionResponse","REMOVE_SECTION_RESPONSE","processImportResponse","PROCESS_IMPORT_RESPONSE","headers","sections","addTopicResponse","ADD_TOPIC_RESPONSE","index","removeTopicResponse","REMOVE_TOPIC_RESPONSE","hideTopicFormResponse","HIDE_TOPIC_FORM","fetchSubjectTopics","dispatch","query_params","$helper","buildQueryParams","class_id","subject_id","syllabus_type_id","$api","getData","then","res","error","fetchSubject","addSection","formData","postData","status","removeSection","id","FormData","append","easyEncode","showTopicForm","form","SHOW_TOPIC_FORM","hideTopicForm","addTopic","removeTopic","processImport","updateSelectedSections","selectedSections","SELECTED_SECTION_RESPONSE","url","buildPaperUrlWithParams","stid","cid","suid","window","location","href","PSections","props","state","subject","updateSectionCheckBox","bind","updateTopicCheckBox","generatePaperScreen","triggerLeftPaneCollapse","buildUrlWithParams","APP_URL","this","setState","fetchData","nextProps","nextState","checked","checkbox","topics","length","map","t","selected_sections","s_index","Fragment","className","onClick","title","name","a_class","back_button","back_button_text","i","parent_title","medium","rtl_name","is_topics","value","htmlFor","topic","j","is_loading","Component","connect","subjects","find","s","easyDecode","classes","c","section","loading","BoxSmall","box_class","icon_class","cacheTopics","e","preventDefault","parent_class","box_title","rtl_none","box_rtl_title"],"mappings":"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","file":"21.js","sourcesContent":["import {\n    REQUEST_INIT,\n    FETCH_DATA_SECTIONS_RESPONSE,\n    FETCH_SUBJECT_RESPONSE,\n    ADD_SECTION_RESPONSE,\n    ADD_TOPIC_RESPONSE,\n    REMOVE_SECTION_RESPONSE,\n    REMOVE_TOPIC_RESPONSE,\n    SHOW_TOPIC_FORM,\n    HIDE_TOPIC_FORM,\n    PROCESS_IMPORT_RESPONSE,\n    IMPORTED_TOPICS_RESPONSE, SELECTED_SECTION_RESPONSE\n} from \"./Types\";\n\nimport {class_id, syllabus_type_id, subject_id} from \"../../params\";\n\nexport const requestInit  = () => {\n    return {\n        type: REQUEST_INIT,\n        message: ''\n    }\n};\n\nconst response_obj = (action_type, response) => {\n    return {\n        type: action_type,\n        payload: response.data,\n        message: response.message,\n    }\n};\n\nexport const fetchResponse = response => {\n    return response_obj(FETCH_DATA_SECTIONS_RESPONSE, response);\n};\n\nexport const fetchSubjectResponse = response => {\n    return response_obj(FETCH_SUBJECT_RESPONSE, response)\n};\n\nexport const addSectionResponse = response => {\n    return response_obj(ADD_SECTION_RESPONSE, response)\n};\n\nexport const removeSectionResponse = response => {\n    return response_obj(REMOVE_SECTION_RESPONSE, response)\n};\n\nexport const processImportResponse = response => {\n    return {\n        ...response_obj(PROCESS_IMPORT_RESPONSE, response),\n        headers: response.headers,\n        sections: response.sections\n    }\n};\n\nexport const importTopicsResponse = response => {\n    return response_obj(IMPORTED_TOPICS_RESPONSE, response);\n};\n\nexport const addTopicResponse = response => {\n    return {\n        ...response_obj(ADD_TOPIC_RESPONSE, response),\n        index: response.index,\n    }\n};\n\nexport const removeTopicResponse = response => {\n    return {\n        ...response_obj(REMOVE_TOPIC_RESPONSE, response),\n        index: response.index,\n    }\n};\n\nexport const hideTopicFormResponse = index => {\n    return {\n        type: HIDE_TOPIC_FORM,\n        index\n    };\n};\n\nexport const selectedSectionsResponse = response => {\n    return response_obj(SELECTED_SECTION_RESPONSE, response)\n};\n\nexport const fetchSubjectTopics = (dispatch) => {\n    dispatch(requestInit());\n\n    const query_params = $helper.buildQueryParams({class_id, subject_id, syllabus_type_id});\n    return (dispatch) => {\n        $api.getData(`get-subject-sections?${query_params}`)\n        .then(res => {\n            const data = {data: res, message: ''};\n            dispatch(fetchResponse(data))\n        }).catch(error => {\n            const data = {data: [], message: 'Error: ' + error};\n            dispatch(fetchResponse(data));\n        })\n    }\n};\n\nexport const fetchSubject = (dispatch) => {\n    return (dispatch) => {\n        $api.getData(`get-a-subject-by-id/${subject_id}`)\n            .then(res => {\n                const data = {data: res, message: ''};\n                dispatch(fetchSubjectResponse(data))\n            }).catch(error => {\n            const data = {data: [], message: 'Error: ' + error};\n            dispatch(fetchSubjectResponse(data));\n        })\n    }\n};\n\nexport const addSection = (dispatch, formData) => {\n    dispatch(requestInit());\n\n    return (dispatch) => {\n        $api.postData('add-subject-topic', formData)\n            .then(res => {\n                let data = {data: {}, message: res.message};\n                if (res.status) {\n                    data.data = res.data;\n                }\n                dispatch(addSectionResponse(data));\n            }).catch(error => {\n            const data = {data: {}, message: 'Error: ' + error};\n            dispatch(addSectionResponse(data));\n        });\n    }\n};\n\nexport const removeSection = (dispatch, id) => {\n    dispatch(requestInit());\n\n    let formData = new FormData();\n\n    formData.append('id', $helper.easyEncode(id));\n    formData.append('class_id', class_id);\n    formData.append('subject_id', subject_id);\n    formData.append('section_id', $helper.easyEncode(id));\n\n    return (dispatch) => {\n        $api.postData('remove-a-section', formData)\n        .then(res => {\n            let data = {data: {}, message: res.message};\n            if (res.status) {\n                data.data = res.data;\n            }\n            dispatch(removeSectionResponse(data));\n        }).catch(error => {\n            const data = {data: {}, message: 'Error: ' + error};\n            dispatch(removeSectionResponse(data));\n        });\n    }\n};\n\nexport const showTopicForm = (dispatch, form, index) => {\n    return (dispatch) => {\n            dispatch({\n                type: SHOW_TOPIC_FORM,\n                form,\n                index\n        });\n    };\n};\n\nexport const hideTopicForm = (dispatch, index) => {\n    return (dispatch) => {\n        dispatch(hideTopicFormResponse(index));\n    }\n};\n\nexport const addTopic = (dispatch, index, formData) => {\n    dispatch(requestInit());\n\n    return (dispatch) => {\n        $api.postData('add-subject-topic', formData)\n            .then(res => {\n                const data = {data: {}, message: res.message, index};\n                if (res.status) {\n                    data.data = res.data;\n                }\n                dispatch(addTopicResponse(data));\n                dispatch(hideTopicFormResponse(index));\n            }).catch(error => {\n            const data = {data: {}, message: 'Error: ' + error, index};\n            dispatch(addTopicResponse(data));\n        });\n    }\n\n};\n\nexport const removeTopic = (dispatch, index, formData) => {\n    dispatch(requestInit());\n\n    return (dispatch) => {\n        $api.postData('remove-a-topic', formData)\n            .then(res => {\n                const data = {data: {}, message: res.message, index};\n                if (res.status) {\n                    data.data = res.data;\n                }\n                dispatch(removeTopicResponse(data));\n            }).catch(error => {\n            const data = {data: {}, message: 'Error: ' + error, index};\n            dispatch(removeTopicResponse(data));\n        });\n    }\n};\n\nexport const processImport = (dispatch, formData) => {\n    dispatch(requestInit());\n\n    return (dispatch) => {\n        $api.postData('process-subject-topics-file', formData)\n            .then(res => {\n                const data = {data: {}, message: res.message, headers: []};\n                if (res.status) {\n                    data.data = res.data;\n                    data.headers = res.headers;\n                    data.sections = res.sections;\n                }\n                dispatch(processImportResponse(data));\n            }).catch(error => {\n            const data = {data: {}, message: 'Error: ' + error, headers: []};\n            dispatch(processImportResponse(data));\n        });\n    }\n};\n\nexport const updateSelectedSections = (dispatch, selectedSections) => {\n    return (dispatch) => {\n        const data = {data: selectedSections, message: \"\"};\n        dispatch(selectedSectionsResponse(data));\n        const url = $helper.buildPaperUrlWithParams('questions', {\n            stid : syllabus_type_id,\n            cid: class_id,\n            suid: subject_id,\n        });\n        window.location.href = url;\n    }\n};\n","import React, {Component} from 'react';\nimport BoxLayout from \"../../common/BoxLayout\";\nimport BoxSmall from \"../../common/BoxSmall\";\n\nimport {class_id, subject_id, syllabus_type_id} from \"../../params\";\nimport {connect} from \"react-redux\";\nimport {fetchSubjectTopics, updateSelectedSections,} from \"../redux/Actions\";\n\nclass PSections extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            sections: []\n        };\n\n        if (!syllabus_type_id || !class_id) {\n            window.location.href = $helper.buildUrlWithParams(APP_URL + '/dashboard');\n            return false;\n        }\n\n        if(!this.props.subject) {\n            window.location.href = $helper.buildUrlWithParams(APP_URL + '/dashboard');\n            return false;\n        }\n\n        this.updateSectionCheckBox = this.updateSectionCheckBox.bind(this);\n        this.updateTopicCheckBox = this.updateTopicCheckBox.bind(this);\n        this.generatePaperScreen = this.generatePaperScreen.bind(this);\n\n        $helper.triggerLeftPaneCollapse();\n    }\n\n    componentDidMount() {\n        const sections = this.props.sections;\n        this.setState({sections: sections});\n        this.props.fetchData();\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return true;\n    }\n\n    updateSectionCheckBox(index, checked) {\n        let sections = this.state.sections;\n        sections[index].checkbox = !checked;\n        if (sections[index].topics.length > 0) {\n            sections[index].topics = sections[index].topics.map(t => {\n                return {\n                    ...t,\n                    checkbox: !checked\n                }\n            });\n        }\n        this.setState({sections})\n    }\n\n    generatePaperScreen() {\n        let selected_sections = this.state.sections;\n        this.props.updateSelectedSections(selected_sections);\n    }\n\n    updateTopicCheckBox(s_index, index, checked) {\n        let sections = this.state.sections;\n        sections[s_index].topics[index].checkbox = !checked;\n        this.setState({sections})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <button className=\"btn btn-primary generate-paper-btn\" onClick={this.generatePaperScreen}>Next</button>\n\n                    <BoxLayout\n                        title={`Topics (${this.props.subject.name} - ${this.props.a_class.name})`}\n                        back_button={true}\n                        back_button_text=\"Back\"\n                    >\n                        {\n                            this.state.sections.length > 0\n                                ? this.state.sections.map((data, i) => {\n                                    i += 1;\n                                    const p_title = data.parent_title;\n                                    const medium = this.props.subject.medium;\n                                    const name = (medium == 'dual' || medium == 'eng') ? data.name : data.rtl_name;\n                                    const is_topics = data.topics.length;\n                                    let parent_class = ' col-11 col-sm-11 ';\n\n                                    return (\n                                        <div className={`col-md-12 ${this.props.subject.medium == 'dual' ? 'col-lg-4' : 'col-lg-4'}`}\n                                             id={`col-${i}`}>\n                                            <div className=\"row\">\n                                                    <ul className=\"section_subsections\">\n                                                        <li>\n                                                                <div className=\"form-check\">\n                                                                    <input\n                                                                        className=\"section-checkbox form-check-input\"\n                                                                        type=\"checkbox\"\n                                                                        value={data.id}\n                                                                        id={`sectionCheckBox${data.id}`}\n                                                                        checked={data.checkbox}\n                                                                        onClick={() => {\n                                                                            this.updateSectionCheckBox(i - 1, data.checkbox)\n                                                                        }}\n                                                                    />\n                                                                    <label\n                                                                        className={`form-check-label ${parent_class}`}\n                                                                        htmlFor={`sectionCheckBox${data.id}`}\n                                                                        onClick={() => {\n                                                                            this.updateSectionCheckBox(i - 1, data.checkbox)\n                                                                        }}\n                                                                    >\n                                                                        <strong className=\"pl-3\" onClick={() => {\n                                                                            this.updateSectionCheckBox(i - 1, data.checkbox)\n                                                                        }}>\n                                                                            {\n                                                                                (medium == 'dual' || medium == 'eng')\n                                                                                    ? `${name}`\n                                                                                    : <span className=\"urdu-font\">{ `${data.rtl_name}`}</span>\n                                                                            }\n                                                                        </strong>\n                                                                    </label>\n                                                                </div>\n                                                        </li>\n\n                                                        <ul>\n                                                        {\n                                                            is_topics > 0\n                                                            ? data.topics.map((topic, j) => {\n                                                                return (\n                                                                    <li>\n                                                                        <div className=\"form-check\">\n                                                                            <input\n                                                                                className=\"section-checkbox form-check-input\"\n                                                                                type=\"checkbox\"\n                                                                                value={topic.id}\n                                                                                id={`sectionCheckBox${topic.id}`}\n                                                                                checked={topic.checkbox}\n                                                                                onClick={() => {\n                                                                                    this.updateTopicCheckBox(i - 1, j, topic.checkbox)\n                                                                                }}\n                                                                            />\n                                                                            <label\n                                                                                className={`form-check-label ${parent_class}`}\n                                                                                htmlFor={`sectionCheckBox${topic.id}`}\n                                                                                onClick={() => {\n                                                                                    this.updateTopicCheckBox(i - 1, j, topic.checkbox)\n                                                                                }}\n                                                                            >\n                                                                                <span className=\"pl-3\" onClick={() => {\n                                                                                    this.updateTopicCheckBox(i - 1, j, topic.checkbox)\n                                                                                }}>\n                                                                                    {\n                                                                                        (medium == 'dual' || medium == 'eng')\n                                                                                            ? `${topic.name}`\n                                                                                            : <span className=\"urdu-font\"> {`${topic.rtl_name}`}</span>\n                                                                                    }\n                                                                                </span>\n                                                                            </label>\n                                                                        </div>\n                                                                    </li>\n                                                                )\n                                                            })\n                                                            : <React.Fragment></React.Fragment>\n                                                        }\n                                                        </ul>\n                                                    </ul>\n\n                                                    {/*<BoxSmall*/}\n                                                    {/*    url=\"javascript:;\"*/}\n                                                    {/*    box_class=\"classes-box\"*/}\n                                                    {/*    icon_class=\"fa-book\"*/}\n                                                    {/*    box_title={`${p_title}-${i}: ${name}`}*/}\n                                                    {/*    box_rtl_title={`${p_title}-${i}: ${data.rtl_name}`}*/}\n                                                    {/*    rtl_none={data.rtl_name.length <= 0 ? true : false}*/}\n                                                    {/*    parent_class=\"\"*/}\n                                                    {/*    topics={data.topics}*/}\n                                                    {/*    id={data.id}*/}\n                                                    {/*    medium={medium}*/}\n                                                    {/*/>*/}\n\n                                            </div>\n                                            {/*{*/}\n                                            {/*    is_topics > 0*/}\n                                            {/*        ? data.topics.map((topic, j) => {*/}\n                                            {/*            return (*/}\n                                            {/*                <div className=\"row\">*/}\n                                            {/*                    <label*/}\n                                            {/*                        className={`form-check-label ${parent_class}`}*/}\n                                            {/*                        htmlFor={`sectionCheckBox${topic.id}`}*/}\n                                            {/*                        onClick={() => {*/}\n                                            {/*                            this.updateTopicCheckBox(i - 1, j, topic.checkbox)*/}\n                                            {/*                        }}*/}\n                                            {/*                    >*/}\n                                            {/*                        <BoxSmall*/}\n                                            {/*                            url=\"javascript:;\"*/}\n                                            {/*                            box_class=\"saved-papers-box\"*/}\n                                            {/*                            icon_class=\"fa-book\"*/}\n                                            {/*                            box_title={`${i}.${$helper.pad(j + 1, 2)}: ${(medium == 'dual' || medium == 'eng') ? topic.name : topic.rtl_name}`}*/}\n                                            {/*                            box_rtl_title={`${i}.${$helper.pad(j + 1, 2)}: ${topic.rtl_name}`}*/}\n                                            {/*                            rtl_none={topic.rtl_name.length <= 0 ? true : false}*/}\n                                            {/*                            parent_class=\"\"*/}\n                                            {/*                            topics={data.topics}*/}\n                                            {/*                            id={data.id}*/}\n                                            {/*                            medium={medium}*/}\n                                            {/*                        />*/}\n                                            {/*                    </label>*/}\n                                            {/*                    <div className=\"form-check\">*/}\n                                            {/*                        <input*/}\n                                            {/*                            className=\"section-checkbox form-check-input\"*/}\n                                            {/*                            type=\"checkbox\"*/}\n                                            {/*                            value={topic.id}*/}\n                                            {/*                            id={`sectionCheckBox${topic.id}`}*/}\n                                            {/*                            checked={topic.checkbox}*/}\n                                            {/*                            onClick={() => {*/}\n                                            {/*                                this.updateTopicCheckBox(i - 1, j, topic.checkbox)*/}\n                                            {/*                            }}*/}\n                                            {/*                        />*/}\n                                            {/*                    </div>*/}\n                                            {/*                </div>*/}\n                                            {/*            )*/}\n                                            {/*        })*/}\n                                            {/*        : <React.Fragment></React.Fragment>*/}\n                                            {/*}*/}\n                                        </div>\n                                    )\n                                })\n                                :\n                                <h2 className=\"container pt-4 pb-4\">{this.props.is_loading ? 'Loading...' : 'No topics found!'}</h2>\n                        }\n                    </BoxLayout>\n\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const subject = state.subject.subjects.find(s => $helper.easyDecode(subject_id) == s.id);\n    const a_class = state.classes.classes.find(c => $helper.easyDecode(class_id) == c.id);\n    let sections = state.section.sections;\n    sections = sections.map((s, i) => {\n        let topics = s.topics;\n        if (topics.length > 0) {\n            topics = s.topics = s.topics.map(t => {\n                return {\n                    ...t,\n                    checkbox: false\n                }\n            })\n        }\n        return {\n            ...s,\n            topics,\n            checkbox: false\n        }\n    });\n    return {\n        loading: state.section.loading,\n        message: state.section.message,\n        subject: subject,\n        sections: sections,\n        selected_sections: [],\n        a_class: a_class\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchData: () => dispatch(fetchSubjectTopics(dispatch)),\n        updateSelectedSections: (selectedSections) => dispatch(updateSelectedSections(dispatch, selectedSections))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PSections);\n","import React, { Component } from 'react';\n\nclass BoxSmall extends  Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            box_class : \"alert alert-primary jumbotron jumbotron-fluid \",\n            icon_class: \"fa \"\n        };\n\n        this.cacheTopics = this.cacheTopics.bind(this);\n    }\n\n    cacheTopics(e) {\n        e.preventDefault();\n        window.location.href = this.props.url;\n    }\n\n    render() {\n        return (\n            <div\n                className={this.props.parent_class + ' boxSm' }\n                title={this.props.box_title}>\n                <a href={this.props.url} onClick={this.cacheTopics}>\n                    <div className={this.state.box_class + this.props.box_class}>\n                        <div className=\"row\">\n                            {\n                                this.props.medium == 'eng' || this.props.medium == 'dual'\n                                    ?\n                                        <h4 className={`display-5 mt-3 mb-4 ${this.props.medium == 'dual' && !this.props.rtl_none ? 'col-lg-6' : ''}`}>\n                                            <i className={this.state.icon_class + this.props.icon_class}></i>\n                                            &nbsp;\n                                            {this.props.box_title}\n                                        </h4>\n                                    : ''\n                            }\n\n                            {\n                                this.props.medium == 'dual' || this.props.medium == 'urdu'\n                                    ? (\n                                        <h4 className={`urdu-font display-5 mt-3 mb-4 ${this.props.medium == 'dual' ? 'col-lg-6' : ''} ${this.props.rtl_none ? 'd-none' : ''}`}>\n                                            <i className={this.state.icon_class + this.props.icon_class}></i>\n                                            &nbsp;\n                                            {this.props.box_rtl_title}\n                                        </h4>\n                                    )\n                                    : ''\n                            }\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default BoxSmall;\n"],"sourceRoot":""}