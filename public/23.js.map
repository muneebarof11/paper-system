{"version":3,"sources":["webpack:///./resources/js/v1/Questions/components/general/forms/QuestionForm.jsx","webpack:///./resources/js/v1/Questions/components/forms/QPriorityFormRow.jsx","webpack:///./resources/js/v1/Questions/components/general/forms/McqForm.jsx"],"names":["QuestionForm","props","state","question_en","question_rtl","submitForm","bind","hideTopicForm","updateStatement","window","confirm","this","hideForm","index","statement","type","setState","e","preventDefault","form_data","require","serialize","document","querySelector","hash","length","alert","formData","FormData","key","append","addQuestion","endpoint","onSubmit","className","id","value","form","name","htmlFor","editor","ClassicEditor","onChange","event","data","getData","config","ckEditor_config","ckEditor_rtl_config","disabled","loading","onClick","Component","connect","questions","message","dispatch","hideQuestionForm","McqForm","options","addOption","removeOption","last_option","push","splice","option_en","option_rtl","JSON","stringify","map","o","i","j","$helper","getAlphabet","Fragment"],"mappings":"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","file":"23.js","sourcesContent":["import React, { Component } from 'react';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from 'ckeditor5-classic-with-mathtype';\n\nimport {addQuestion, hideQuestionForm} from \"../../../redux/Actions\";\nimport {connect} from \"react-redux\";\nimport {ckEditor_config, ckEditor_rtl_config} from \"../../../../params\";\nimport QPriorityFormRow from \"./McqForm\";\n\nclass QuestionForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            question_en: '',\n            question_rtl: '',\n        };\n\n        this.submitForm = this.submitForm.bind(this);\n        this.hideTopicForm = this.hideTopicForm.bind(this);\n        this.updateStatement = this.updateStatement.bind(this);\n    }\n\n    hideTopicForm() {\n        const confirmation = window.confirm('Are you sure you want to cancel?');\n        if (!confirmation) return false;\n\n        this.props.hideForm(this.props.index);\n    }\n\n    updateStatement(statement, type) {\n        if(type === 'en') {\n            this.setState({question_en: statement})\n        } else {\n            this.setState({question_rtl: statement})\n        }\n    }\n\n    submitForm(e) {\n        e.preventDefault();\n\n        const serialize = require('form-serialize');\n        let form = document.querySelector(`#sectionForm_${this.props.index}`);\n\n        let form_data = serialize(form, { hash: true });\n\n        if(this.state.question_en.length <= 0 && this.state.question_rtl.length <= 0) {\n            alert('Either English or Urdu question statement is required');\n            return false;\n        }\n\n        const formData = new FormData();\n        for (let key in form_data) {\n            formData.append(key, form_data[key]);\n        }\n        formData.append('question_en', this.state.question_en);\n        formData.append('question_rtl', this.state.question_rtl);\n\n        this.props.addQuestion(formData, this.props.endpoint, this.props.type, this.props.index);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitForm} className=\"mb-4 sectionForm\" id={`sectionForm_${this.props.index}`}>\n                <input type=\"hidden\" value={this.props.form} name=\"section_info\" />\n\n                <div className=\"row\">\n                    <div className=\"form-group col-md-6 row\">\n                        <label className=\"col-lg-3 col-form-label\" htmlFor=\"priority\">Priority</label>\n                        <select className=\"custom-select col-lg-9\" name=\"priority\" id=\"priority\">\n                            <option value=\"exercise\">Exercise</option>\n                            <option value=\"past_paper\">Past Paper</option>\n                            <option value=\"additional\">Additional</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group container-fluid\">\n                        <h4><label className=\"col-form-label col-lg-12\" htmlFor={`question_en_${this.props.index}`}>Question:</label></h4>\n                        <div className=\"col-lg-12\">\n                            <CKEditor\n                                editor={ClassicEditor}\n                                onChange={ ( event, editor ) => {\n                                    const data = editor.getData();\n                                    this.setState({question_en: data})\n                                }}\n                                config={ckEditor_config}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group col-lg-12 container-fluid urdu-font\">\n                        <h4><label className=\"col-lg-12 col-form-label text-align-right\" htmlFor={`question_rtl_${this.props.index}`}>:سوال</label></h4>\n                        <div className=\"col-lg-12\">\n                            <CKEditor\n                                editor={ClassicEditor}\n                                onChange={ ( event, editor ) => {\n                                    const data = editor.getData();\n                                    this.setState({question_rtl: data})\n                                }}\n                                config={ckEditor_rtl_config}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <p className=\"mt-3\"></p>\n\n                <div className=\"form-group row\">\n\n                    <div className=\"mx-auto col-lg-6 row\">\n                        <button className=\"btn btn-primary col-lg-5\" type=\"submit\" disabled={this.props.loading}>\n                            {this.props.loading ? 'Saving...' : 'Save'}\n                        </button>\n                        <button className=\"btn btn-danger col-lg-5\" type=\"button\" onClick={this.hideTopicForm}>\n                            Cancel\n                        </button>\n                    </div>\n\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.questions.loading,\n        message: state.questions.message,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addQuestion: (formData, endpoint, type, index) => dispatch(addQuestion(dispatch, formData, endpoint, type, index)),\n        hideForm: (index) => dispatch(hideQuestionForm(dispatch, index))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm);\n","import React, { Component } from 'react';\r\n\r\nclass QPriorityFormRow extends Component {\r\n    render() {\r\n        return ``;\r\n    }\r\n}\r\n\r\nexport default QPriorityFormRow;","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {addQuestion, hideQuestionForm} from \"../../../redux/Actions\";\nimport QPriorityFormRow from \"../../forms/QPriorityFormRow\";\n\nclass McqForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: [1]\n        };\n\n        this.hideTopicForm = this.hideTopicForm.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.addOption = this.addOption.bind(this);\n        this.removeOption = this.removeOption.bind(this);\n    }\n\n    hideTopicForm() {\n        const confirmation = window.confirm('Are you sure you want to cancel?');\n        if (!confirmation) return false;\n\n        this.props.hideForm(this.props.index);\n    }\n\n    addOption() {\n        let options = this.state.options;\n        let last_option = options[options.length-1] + 1;\n        options.push(last_option);\n        this.setState({options: options});\n    }\n\n    removeOption(index) {\n        let options = this.state.options;\n\n        if(options.length === 1) {\n            return false;\n        }\n\n        options.splice(index, 1);\n        this.setState({options: options});\n    }\n\n    submitForm(e) {\n        e.preventDefault();\n\n        const serialize = require('form-serialize');\n        let form = document.querySelector(`#sectionForm_${this.props.index}`);\n        let form_data = serialize(form, { hash: true });\n\n        if(!form_data.question_en) {\n            alert('English question is required');\n            return false;\n        }\n\n        if(!form_data.question_rtl) {\n            alert('Urdu question is required');\n            return false;\n        }\n\n        if(!form_data.option_en && !form_data.option_rtl) {\n            alert('Either English or Urdu option is required');\n            return false;\n        }\n\n        form_data['option_en'] = JSON.stringify(form_data['option_en']);\n        form_data['option_rtl'] = JSON.stringify(form_data['option_rtl']);\n\n        const formData = new FormData();\n        for (let key in form_data) {\n            formData.append(key, form_data[key]);\n        }\n\n        this.props.addQuestion(formData, this.props.endpoint, this.props.type, this.props.index);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.submitForm} className=\"mb-4 sectionForm\" id={`sectionForm_${this.props.index}`}>\n                <input type=\"hidden\" value={this.props.form} name=\"section_info\" />\n\n                <div className=\"row\">\n                    <div className=\"form-group col-md-6 row\">\n                        <label className=\"col-lg-3 col-form-label\" htmlFor=\"priority\">Priority</label>\n                        <select className=\"custom-select col-lg-9\" name=\"priority\" id=\"priority\">\n                            <option value=\"exercise\">Exercise</option>\n                            <option value=\"past_paper\">Past Paper</option>\n                            <option value=\"additional\">Additional</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"form-group col-lg-6 row\">\n                        <label className=\"col-form-label col-lg-3\" htmlFor={`question_en_${this.props.index}`}>Question:</label>\n                        <div className=\"col-lg-9\"><input type=\"text\" className=\"form-control\" id={`question_en_${this.props.index}`} name=\"question_en\" /></div>\n                    </div>\n                    <div className=\"form-group col-lg-6 row urdu-font\">\n                        <div className=\"col-lg-9\"><input type=\"text\" className=\"form-control text-align-right\" id={`question_rtl_${this.props.index}`} name=\"question_rtl\" /></div>\n                        <label className=\"col-lg-3 col-form-label text-align-right\" htmlFor={`question_rtl_${this.props.index}`}>سوال:</label>\n                    </div>\n                </div>\n                {\n                    this.state.options.length > 0\n                        ? this.state.options.map((o, i) => {\n                            let j= i+1;\n                            return (\n                                <div className=\"row\">\n                                    <div className=\"form-group col-lg-6 row\">\n                                        <label className=\"col-form-label col-lg-3\" htmlFor={`option_en_${j}`}>Option {$helper.getAlphabet(i)}:</label>\n                                        <div className=\"col-lg-7\"><input type=\"text\" className=\"form-control\" id={`option_en_${j}`} name={`option_en[]`} /></div>\n                                        <div className=\"col-lg-2\">\n                                            <button type=\"button\" className=\"action-btn btn btn-warning float-right\" onClick={this.addOption}><i className=\"fa fa-plus-circle\"></i></button>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group col-lg-6 row urdu-font\">\n                                        <div className=\"col-lg-2\">\n                                            <button type=\"button\" className={`${i === 0 ? 'd-none' : ''} action-btn btn btn-danger`} onClick={() => {this.removeOption(i)}}><i className=\"fa fa-minus-circle\"></i></button>\n                                        </div>\n                                        <div className=\"col-lg-7\">\n                                            <input type=\"text\" className=\"form-control text-align-right\" id={`option_rtl_${j}`} name={`option_rtl[]`}/></div>\n                                        <label className=\"col-lg-3 col-form-label text-align-right\"\n                                               htmlFor={`option_rtl_${j}`}>:{$helper.getAlphabet(i)} آپشن </label>\n                                    </div>\n                                </div>\n                            )\n                        })\n                        : <React.Fragment></React.Fragment>\n\n                }\n\n                <hr className=\"mt-3\" />\n\n                <div className=\"form-group row\">\n\n                    <div className=\"col-lg-6 row\">\n                        <button className=\"btn btn-primary col-lg-5\" type=\"submit\" disabled={this.props.loading}>\n                            {this.props.loading ? 'Saving...' : 'Save'}\n                        </button>\n                        <button className=\"btn btn-danger col-lg-5\" type=\"button\" onClick={this.hideTopicForm}>\n                            Cancel\n                        </button>\n                    </div>\n\n                    <div className=\"form-group col-md-6 row\">\n                        <label className=\"col-lg-3 col-form-label\" htmlFor=\"correct_option\">Correct Answer</label>\n                        <select className=\"custom-select col-lg-9\" name=\"correct_option\" id=\"correct_option\">\n                            {\n                                this.state.options.length > 0\n                                    ? this.state.options.map((o, i) => {\n                                        return <option value={$helper.getAlphabet(i)}>Option {$helper.getAlphabet(i)}</option>\n                                    })\n                                    : <option>Loading...</option>\n                            }\n                        </select>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.questions.loading,\n        message: state.questions.message,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addQuestion: (formData, endpoint, type, index) => dispatch(addQuestion(dispatch, formData, endpoint, type, index)),\n        hideForm: (index) => dispatch(hideQuestionForm(dispatch, index))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(McqForm);\n"],"sourceRoot":""}